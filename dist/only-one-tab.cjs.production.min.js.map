{"version":3,"file":"only-one-tab.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface OnlyOneTabProps {\n  children: ReactElement;\n  massage?: string;\n}\n\nconst OnlyOneTab: React.FunctionComponent<OnlyOneTabProps> = ({\n  children,\n  massage,\n}) => {\n  const localStorageKey = localStorage.getItem('tab');\n  const [isCurrentTab, setisCurrentTab] = useState(true);\n  const id = uuidv4();\n\n  useEffect(() => {\n    localStorage.setItem('tab', id);\n  }, []);\n\n  window.addEventListener('storage', () => {\n    if (localStorageKey === id) {\n      setisCurrentTab(true);\n    } else {\n      setisCurrentTab(false);\n    }\n  });\n\n  return (\n    <>\n      {isCurrentTab ? (\n        children\n      ) : (\n        <>{massage ? massage : <>Only One Tab Allowed</>}</>\n      )}\n    </>\n  );\n};\n\nexport default OnlyOneTab;\n"],"names":["children","massage","localStorageKey","localStorage","getItem","useState","isCurrentTab","setisCurrentTab","id","uuidv4","useEffect","setItem","window","addEventListener","React"],"mappings":"sLAQ6D,gBAC3DA,IAAAA,SACAC,IAAAA,QAEMC,EAAkBC,aAAaC,QAAQ,SACLC,YAAS,GAA1CC,OAAcC,OACfC,EAAKC,OAcX,OAZAC,aAAU,WACRP,aAAaQ,QAAQ,MAAOH,KAC3B,IAEHI,OAAOC,iBAAiB,WAAW,WAE/BN,EADEL,IAAoBM,MAQxBM,gCACGR,EACCN,EAEAc,gCAAGb,GAAoBa"}