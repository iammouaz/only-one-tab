{"version":3,"file":"only-one-tab.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface OnlyOneTabProps {\n  children: ReactElement;\n  massage?: string | JSX.Element;\n}\n\nconst OnlyOneTab: React.FunctionComponent<OnlyOneTabProps> = ({\n  children,\n  massage,\n}) => {\n  const localStorageKey = localStorage.getItem('tab');\n  const [isCurrentTab, setisCurrentTab] = useState(true);\n  const id = uuidv4();\n\n  useEffect(() => {\n    localStorage.setItem('tab', id);\n  }, []);\n\n  window.addEventListener('storage', () => {\n    if (localStorageKey === id) {\n      setisCurrentTab(true);\n    } else {\n      setisCurrentTab(false);\n    }\n  });\n\n  return (\n    <>\n      {isCurrentTab ? (\n        children\n      ) : (\n        <>{massage ? massage : <>Only One Tab Allowed</>}</>\n      )}\n    </>\n  );\n};\n\nexport default OnlyOneTab;\n"],"names":["OnlyOneTab","children","massage","localStorageKey","localStorage","getItem","useState","isCurrentTab","setisCurrentTab","id","uuidv4","useEffect","setItem","window","addEventListener","React"],"mappings":";;;;;;;;;;AAQA,IAAMA,UAAU,GAA6C,SAAvDA,UAAU;MACdC,QAAQ,QAARA,QAAQ;IACRC,OAAO,QAAPA,OAAO;EAEP,IAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;EACnD,gBAAwCC,cAAQ,CAAC,IAAI,CAAC;IAA/CC,YAAY;IAAEC,eAAe;EACpC,IAAMC,EAAE,GAAGC,OAAM,EAAE;EAEnBC,eAAS,CAAC;IACRP,YAAY,CAACQ,OAAO,CAAC,KAAK,EAAEH,EAAE,CAAC;GAChC,EAAE,EAAE,CAAC;EAENI,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE;IACjC,IAAIX,eAAe,KAAKM,EAAE,EAAE;MAC1BD,eAAe,CAAC,IAAI,CAAC;KACtB,MAAM;MACLA,eAAe,CAAC,KAAK,CAAC;;GAEzB,CAAC;EAEF,OACEO,4DACGR,YAAY,GACXN,QAAQ,GAERc,4DAAGb,OAAO,GAAGA,OAAO,GAAGa,mFAAyB,CACjD,CACA;AAEP,CAAC;;;;"}